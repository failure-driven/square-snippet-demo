version: 2
jobs:
  build:
    working_directory: ~/square-snippet-demo
    docker:
      - image: circleci/ruby:3.0.1-buster-node-browsers
        environment:
          PGHOST: localhost
          PGUSER: your-app-name
          RAILS_ENV: test
      - image: postgres:13.2
        environment:
          POSTGRES_USER: your-app-name
          POSTGRES_DB: your-app-name_test
          POSTGRES_PASSWORD: ""
          POSTGRES_HOST_AUTH_METHOD: trust
    steps:
      - checkout

      - run:
          name: Check current version of node
          command: node -v

      # Restore Cached Dependencies
      - type: cache-restore
        name: Restore bundle cache
        key: your-app-name-{{ checksum "Gemfile.lock" }}

      # TODO: is this necessary? is it not just default for ruby 3.0.1?
      # install specific bundler
      - run: gem install bundler -v 2.2.15

      # Bundle install dependencies
      - run: bundle install --path vendor/bundle

      # Cache Dependencies
      - type: cache-save
        name: Store bundle cache
        key: your-app-name-{{ checksum "Gemfile.lock" }}
        paths:
          - vendor/bundle

      # Only necessary if app uses webpacker or yarn in some other way
      - restore_cache:
          keys:
            - rails-demo-yarn-{{ checksum "yarn.lock" }}
            - rails-demo-yarn-

      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      # Store yarn / webpacker cache
      - save_cache:
          key: rails-demo-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      # Wait for DB
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m

      # Add the Postgres 12.3 binaries to the path as psql is requred for db:migrate
      # - run: echo 'export PATH=/usr/lib/postgresql/12.3/bin/:$PATH' >> $BASH_ENV
      - run:
          name: Installing Dependencies
          command: |
            sudo apt-get install postgresql-client

      # Setup the database
      - run:
          name: Database Setup
          command: bundle exec rake db:drop db:create db:schema:load

      # Pre test

      - run: yarn lint
      - run: yarn check-format

      - run: bundle exec rubocop --config .rubocop.yml

      # Run the tests
      # - run: yarn test

      # - run: bundle exec rspec spec/{controllers,api_acceptance}/

      - run:
          name: RSpec
          command: bundle exec rspec spec --format documentation

      # Save artifacts
      - store_test_results:
          path: /tmp/test-results
